#!/usr/bin/env python2
#
# The MIT License (MIT)
#
# Copyright 2013 - 2017 Red Hat, Inc.
#
# Author: Fam Zheng <famz@redhat.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
import subprocess
import sys

def get_commits(cmd):
    output = subprocess.check_output(cmd, shell=True)
    return [x.split(' ', 1) for x in output.splitlines()]

commits_down = get_commits("git log --oneline -n 100 %s" % " ".join(sys.argv[1:]))
commits_up = get_commits("git log --oneline -n 100 upstream/master %s" % " ".join(sys.argv[1:]))

print "e - existing downstream"
ds = dict([(subject, ha) for ha, subject in commits_down])
for a, b in commits_up:
    if b not in ds:
        print " ",
    else:
        print "e",
    print a, b
